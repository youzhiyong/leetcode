1. 求中点不要用 int mid = (l + r)/2，有溢出风险，稳妥的方法是 int mid = l + (r-l)/2
2. 除以2改为右移1位更好 需要注意 右移运算符 优先级 最低，需要加括号 int mid = l + ((r-l) >> 2)
3. 链表问题 首选添加一个头部
4. 位运算的妙用 异或运算特性：整数n与自己异或的结果为0, 0与整数n异或的结果为n
5. 翻转数组 数组nums 起始i 终止j
while (i < j) {
    int temp = nums[i];
    nums[i++] = nums[j];
    nums[j--] = temp;
}


索引
二叉树：100,101,104,107,108,109,110

经典：189

